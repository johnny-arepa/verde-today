{"version":3,"sources":["img/refresh-icon.svg","Spinner.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Spinner","className","Calculator","handleFocus","event","target","select","handleChange","value","state","input","setState","props","changeFactor","handleBlur","handleClick","num","st","Math","floor","htmlFor","onBlur","this","onFocus","onChange","type","name","id","min","max","onClick","Component","App","updateRates","dolartoday","isLoaded","fetch","then","res","json","data","timestamp","_timestamp","fecha","dol","USD","bcv","sicad2","idv","eur","EUR","localStorage","setItem","JSON","stringify","upToDate","catch","err","parse","window","getItem","console","log","message","formatCur","amount","countryCode","toLocaleString","minimumFractionDigits","maximumFractionDigits","factor","fetchInterval","setInterval","amountDol","amountEur","dolDolartoday","eurDolartoday","dolBcv","eurBcv","src","svgRefresh","alt","href","rel","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e9fd5719.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/refresh-icon.c0df966c.svg\";","import React from 'react';\nimport './Spinner.css';\n\nexport default function Spinner() {\n  return (\n    <div className=\"Spinner\">\n      <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport './Calculator.css';\n\nclass Calculator extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"1\"\n    }\n  }\n\n  // Focus: marc all input content\n  handleFocus = (event) => {\n    event.target.select();\n  }\n\n  // Change\n  handleChange = (event) => {\n    // event.target.value.replace(/\\D/,'')\n    +event.target.value <= 10000000\n      && +event.target.value + +this.state.input > 0\n      && this.setState({ input: event.target.value },\n        () => {\n          this.props.changeFactor(this.state.input)\n        })\n  }\n\n  // Focus out \n  handleBlur = (event) => {\n    let value = event.target.value;\n    if (value <= 0) value = 1;\n    this.setState({ input: +  value },\n      () => this.props.changeFactor(this.state.input))\n  }\n\n  // Increment \n  handleClick = (num) => {\n    +this.state.input + num >= 1\n      && +this.state.input + num <= 10000000\n      && this.setState(st => ({ input: Math.floor(+st.input) + num }),\n        () => this.props.changeFactor(this.state.input))\n  }\n  render() {\n    return (\n      <div className=\"Calculator\">\n        <label htmlFor=\"amount\">Cantidad:</label>\n        <input\n          onBlur={this.handleBlur}\n          onFocus={this.handleFocus}\n          onChange={this.handleChange}\n          type=\"number\"\n          // pattern=\"[0-9]*\"\n          name=\"amount\"\n          id=\"amount\"\n          value={this.state.input}\n          min=\"1\"\n          max=\"100000\"\n        />\n        <button\n          onClick={() => this.handleClick(-1)}\n          className=\"btn\"\n        >\n          &minus;\n        </button>\n        <button\n          onClick={() => this.handleClick(1)}\n          className=\"btn\">\n          +\n          </button>\n      </div>\n    )\n  }\n}\n\nexport default Calculator;","import React, { Component } from 'react';\nimport './App.css';\nimport Spinner from './Spinner';\nimport Calculator from './Calculator';\nimport svgRefresh from './img/refresh-icon.svg';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      fetchInterval: null,\n      isLoaded: false,\n      upToDate: false,\n      dolartoday: {\n        timestamp: null,\n        dol: {\n          dolartoday: 0,\n          bcv: 0,\n          idv: 0\n        },\n        eur: {\n          dolartoday: 0,\n          bcv: 0,\n          idv: 0\n        }\n      },\n      factor: 1\n    }\n  }\n\n  componentDidMount() {\n    // If local storage data available load first\n    if (JSON.parse(window.localStorage.getItem('dolartoday'))) {\n      const dolartoday = JSON.parse(window.localStorage.getItem('dolartoday'));\n      this.setState({ dolartoday, upToDate: false, isLoaded: true })\n    }\n    this.updateRates();\n    // Fetch new data every 5 minutes\n    this.setState({\n      fetchInterval: setInterval(() => {\n        this.updateRates();\n      }, 300000)\n    });\n  }\n\n  componentWillUnmount() {\n    this.fetchInterval = null;\n  }\n\n  // Update rates\n  updateRates = () => {\n    let dolartoday = {}\n    this.setState({ isLoaded: false })\n    fetch('https://s3.amazonaws.com/dolartoday/data.json')\n      .then(res => res.json())\n      .then(data => {\n        dolartoday = {\n          timestamp: data._timestamp.fecha,\n          dol: {\n            dolartoday: data.USD.dolartoday,\n            bcv: data.USD.sicad2,\n            idv: 0\n          },\n          eur: {\n            dolartoday: data.EUR.dolartoday,\n            bcv: data.EUR.sicad2,\n            idv: 0\n          }\n        }\n        localStorage.setItem(\"dolartoday\", JSON.stringify(dolartoday))\n        this.setState({ dolartoday, upToDate: true, isLoaded: true })\n      })\n      .catch(err => {\n        if (JSON.parse(window.localStorage.getItem('dolartoday'))) {\n          dolartoday = JSON.parse(window.localStorage.getItem('dolartoday'))\n          this.setState({\n            dolartoday, upToDate: false,\n            isLoaded: true\n          })\n        }\n        console.log(\"ERROR: \", err.message);\n      });\n  }\n\n  // Click Handler\n  handleClick = () => {\n    this.updateRates();\n  }\n\n  // Format Currency\n  formatCur = (amount, countryCode) => amount.toLocaleString(countryCode, { minimumFractionDigits: 2, maximumFractionDigits: 2 });\n\n\n  // Calculator\n  changeFactor = input => {\n    // console.log(input)\n    this.setState({ factor: +input })\n  }\n\n  render() {\n    const timestamp = this.state.dolartoday.timestamp;\n    const upToDate = this.state.upToDate;\n    const factor = this.state.factor;\n    const amountDol = this.formatCur(factor, 'us-US')\n    const amountEur = this.formatCur(factor, 'de-DE')\n    const dolDolartoday = this.formatCur(+this.state.dolartoday.dol.dolartoday * factor, 'de-DE');\n    const eurDolartoday = this.formatCur(+this.state.dolartoday.eur.dolartoday * factor, 'de-DE');\n\n    const dolBcv = this.formatCur(+this.state.dolartoday.dol.bcv * factor, 'de-DE');\n    const eurBcv = this.formatCur(+this.state.dolartoday.eur.bcv * factor, 'de-DE');\n    // const dolIdv = this.formatBol(this.state.dol.idv);\n    // const eurIdv = this.formatBol(this.state.eur.idv);\n\n    return (\n      <div className=\"App\">\n\n        {/* Loading Spinner */}\n        {!this.state.isLoaded && <Spinner />}\n\n        {/* Header */}\n        <header className=\"App-header\">\n          <div className=\"container-header\">\n            <h1> +++ Verde Today +++<span className=\"speed\"></span></h1>\n            <p className={upToDate ? 'online' : 'offline'}>\n              {timestamp} </p>\n            <button onClick={this.handleClick} className=\"refresh\">\n              <img src={svgRefresh} alt=\"refresh\" />\n            </button>\n          </div>\n        </header>\n        <main className=\"App-main\">\n\n          {/* Rates Display Dolartoday */}\n          <section className=\"section section-dollar\">\n            <div className=\"rate-source\">Dolartoday</div>\n            <div className=\"rates\">\n              <div className={`rates-container dolartoday ${this.state.upToDate ? ' updated' : ''} `}>\n                <div className=\"rate foreign\">{amountDol}&nbsp;$&nbsp;=</div>\n                <div className=\"rate bolivar\">{dolDolartoday}<span className=\"bss\">&nbsp;Bs</span></div>\n              </div>\n              <div className=\"rates-container\">\n                <div className=\"rate foreign\">{amountEur}&nbsp;€&nbsp;=</div>\n                <div className=\"rate bolivar\">{eurDolartoday}<span className=\"bss\">&nbsp;Bs</span></div>\n              </div>\n            </div>\n          </section>\n\n          {/* Rates Display BCV */}\n          <section className=\"section section-euro\">\n            <div className=\"rate-source\">BCV</div>\n            <div className=\"rates\">\n              <div className=\"rates-container\">\n                <div className=\"rate foreign\">{amountDol}&nbsp;$&nbsp;=</div>\n                <div className=\"rate bolivar\">{dolBcv}<span className=\"bss\">&nbsp;Bs</span></div>\n              </div>\n              <div className=\"rates-container\">\n                <div className=\"rate foreign\">{amountEur}&nbsp;€&nbsp;=</div>\n                <div className=\"rate bolivar\">{eurBcv}<span className=\"bss\">&nbsp;Bs</span></div>\n              </div>\n            </div>\n          </section>\n\n          {/* Calculator */}\n          <Calculator changeFactor={this.changeFactor} />\n\n          {/* Linklist */}\n          <ul className=\"links\">\n            <li>\n              <a href=\"https://bit.ly/venezuela911\" rel=\"noopener noreferrer\" target=\"_blank\">www.dolartoday.com</a>\n            </li>\n            <li>\n              <a href=\"https://monitordolarvenezuela.com/\" rel=\"noopener noreferrer\" target=\"_blank\">www.monitordolarvenezuela.com</a>\n            </li>\n            <li>\n              <a href=\"http://www.bcv.org.ve/\" rel=\"noopener noreferrer\" target=\"_blank\">www.bcv.org.ve</a>\n            </li>\n\n          </ul>\n        </main>\n      </div >\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}